#include "MainGui.h"
#include "statement.h"
#include "conio.h"
#include <fstream>
;
;
void MainGui::GameStart() {
	system("cls");
//输出内容
	std::cout << yellow << "Cooked！" << std::endl;
	std::cout << green << "[Tab]新游戏\n[Space]读取游戏\n[Esc]设置" << white << std::endl;
//选择
	while (1) {
		int input = _getch();//获取键盘输入
		//测试用（查看输入值）
		//std::cout << input << std::endl;
		switch (input) {
		case 9://Tab
			system("cls");
			std::cout << yellow << "你真的需要创建一个新游戏吗?\n" 
					  << green << "[Tab]确定创建新游戏\n[Esc]取消创建" << std::endl;
			input = 0;//重置输入值
			//确定创建
			while (1) {
				input = _getch();
				switch (input) {
				case 9://Tab
					system("cls");
					return this->CreateNewSave();
					break;
				case 27://Esc
					input = 0;
					system("cls");
					return this->GameStart();
					break;
				default:
					break;
				}
			}
			break;
		case 32://Space
			return this->ReadSaveFlie();
			break;
		case 27://Esc
			system("cls");
			PauseMenu();
			break;
		default:
			break;
		}
	}
}
;
void MainGui::ReadSaveFlie() {
//输入文件名称
	system("cls");
	std::cout << yellow << "请输入您的存档名称(输入Exit退出输入)" << white << Back;
	getline(std::cin, save_name);
	if (save_name == "") {//防止为空
		system("cls");
		std::cerr << red << "存档名称不能为空！！！" << white << Back;
		return ReadSaveFlie();
	}
	else if (save_name == "Exit") {//输入Exit时
		system("cls");
		return this->GameStart();
	}
	save_name += ".txt";
//获取文件内容输入流
	std::ifstream getfile;
	getfile.open(save_name, std::ios::in);
	std::string check_temp;//用于存储文件第一行字符的临时变量
	getfile >> check_temp;
//验证标识符
	if (check_temp == checkword) {
		std::cout << yellow << "正在读取数据，存档名" << green << save_name << white << Back;

	}
	else {
		//重置文件流
		getfile.close();
		getfile.clear();
		std::cerr << red << "检测不到存档文件关键字，为保护游戏运行正常，将返回游戏主界面" << white << Back;
		save_name = "";//重置
		return this->GameStart();
	}
	;
	;
//读档过程

//重置文件流
	getfile.close();
	getfile.clear();
//进入游戏
	std::cout << green << "存档读取完毕" << white;
//验证初始化
	if (!initalize_state) {		//初始化未完成
		std::cout << "等待初始化……\n";
		while (1){
			Sleep(500);			//0.5秒检测一次初始化是否成功
			if (initalize_state) {
				return res_weight->MainResMenu();
			}
		}
	}
	system("pause");
	system("cls");
	return res_weight->MainResMenu();
}
;
void MainGui::NewGame() {
	//新游戏引入

	//转向餐厅操作界面
	return res_weight->MainResMenu();
}
;
void MainGui::CreateNewSave() {
//输入新存档名称
	std::cout << yellow << "输入新的存档名称:" << white << Back;
	getline(std::cin, save_name);
//防止输入内容为空
	if (save_name == "") {
		system("cls");
		std::cerr << red << "存档名称不能为空！！！" << white << Back;
		return this->CreateNewSave();
	}
	else if (save_name == "Exit") {//禁用Exit作为存档名
		system("cls");
		std::cerr << red << "程序中借用了Exit作为程序操作字符，不可使用该字符作为存档名" << white << Back;
		save_name = "";
		return this->CreateNewSave();
	}
//补全文件格式
	save_name += ".txt";
//检查是否已存在该存档
	std::fstream savefile(save_name);
	if (savefile.good()) {
		//检测到重名文件(有bug目前)
		std::cerr << yellow << "Warning:检测到存档文件已存在，是否继续创建？\n" 
				  << green << "[Space]继续\n[Esc]返回\n" << white;
		int input = 0;
		//输入为Space时继续
		do {
			input = _getch();
			if (input == 27) {
				//输入ESC时重新创建
				system("cls");
				return this->GameStart();
			}
		} while (input != 32);//强制创建同名文件
	}
//继续创建
	std::ofstream newsave;
	newsave.open(save_name, std::ios::out);
	if (!newsave.is_open()) {
		std::cerr << red << "Wrong!文件无法创建(无法打开文件),即将返回开始菜单\n" << white;
		Sleep(3000);
	}
	else {
		//写入验证字符
		newsave << checkword;
		std::cout << green << "创建了新的存档" << yellow << save_name << Back << white;
		newsave.close();
		newsave.clear();
		system("pause");
	}
//检查初始化
	if (!initalize_state) {		//初始化未完成
		std::cout << "等待初始化……\n";
		while (1) {
			Sleep(500);			//0.5秒检测一次初始化是否成功
			if (initalize_state) {
				return this->NewGame();
			}
		}
	}
	return this->NewGame();

}
;